v = 1:0.1:3
v = 1:6
ones(2,3)
zeros(1, 3)
rand(2, 4)
randn(4, 6)
sqrt(10)
hist(some_rand_var)
hist(some_rand_var, num_binds)
eye(4) - 4*4 identity matrix (matrix with 1 as diagonal, rest = 0)
help eye
A = [1 2; 3 4; 5 6] matrix initialization
A(3, 2) - 6
A(2, :)
A([1 3], :)
A(:, 2) = [10; 11; 12] - assignment
A = [A, [100; 101; 102]] - appends column to the right
A(:) - put all elements into a single vector
';' - separator for rows, ' ' or ',' - separator for columns
length(A) - 3 be carefulle with aplaying it to a matrix
size(A) - 3*2
size(A, 1) - 3
size(A, 2) - 2
v = [1 2 3 4 5]
length(v) - 5
load data_file.dat - file is separated by spaces
load('data_file.dat') - file is separated by spaces
who - list of variables
whos - list of variables with details
C = [A B] - concatenates matrix B to A as columns
C = [A, B] - concatenates matrix B to A as columns
C = [A; B] - concatenates matrix B to A as rows
A * B - matrix multiplication
A .* B - multiplication elements one by one
1 ./ A
v = [1; 2; 3]
log(v)
exp(v)
abs(v)
-v
A + B - summation one by one
v + 1
A' - transponce of a matrix
a = [1 2 3 4]
max(a) = 4
[val, ind] = max(a) - return value and index of max in a
max(A) - returns row with raw value
a < 3 - returns 0 or 1 vector (0 - false, 1 - true)
find(a < 3) - returns indexes of such elements
A = magic(4) - returns magic 3*3 matrix (the same sum of elements in row col diag)
[r, c] = find(A >= 7) - r and c as row and column indexes
sum(a)
prod(a) - product
floor(a)
ceil(a)
max(rand(3), rand(3)) - 3*3 matr with max elements accordinly 
A = magic(3)
max(A, [], 1) - ret vector
max(A, [], 2) - ret column
max(max(A)) - max in matrix
max(A(:)) - the same
sum(A, 1) - vector with totals for column
sum(A, 2) - column with totals for rows
A = magic(9)
A .* eye(9) - returns zero matrix with diagonal elem's from A only
sum(sum(A .* eye(9)))
sum(sum(A .* flipud(eye(9))))
flipud(eye(p)) - returns flipped matrix (with diag from top right corner) 
pinv(A) - inverce
C = repmat(A, size(A, 1), 1) - creates matrix by repeating matrix A, can repeat by rows and columns simultaneously
accumarray(idx, X(:, i), [], @mean) - aggregation with group by

********************************
************* PLOTTING ********* 
********************************

y1 = sin(2 * pi * 4 * t)
plot(t, y1)
y2 = cos(2 * pi * 4 * t)
plot(t, y2)
plot(t, y1)
hold on
plot(t, y2, 'r')
xlabel('time')
ylabel('value')
legend('sin', 'cos')
title('my plot')
subplot(1, 2, 1) - creates 1*2 greed with active 1 element
plot(t, y1) - then plot on it
subplot(1, 2, 2) - creates 1*2 greed with active 2 element
plot(t, y2)
axis([0.5 1 -1 1])
A = magic(5)
imagesc(A) - plots colored greed
imagesc(A), colorbar, colormap gray; - btw, this is a commachaining commands

********************************
************* LOOPS ************ 
********************************

for, while, if, elseif, else
disp('some info to display') - like print





































